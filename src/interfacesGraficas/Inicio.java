package interfacesGraficas;

import com.jtattoo.plaf.aero.AeroLookAndFeel;
import estadisticas.Estadisticas;
import evoluciondiferencial.EvolucionDiferencial;
import evoluciondiferencial.ProcesoED;
import java.awt.BasicStroke;
import java.awt.Color;
//import java.awt.Toolkit;
import java.text.DecimalFormat;
//import java.util.logging.Level;
//import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.UIManager;

import javax.swing.table.DefaultTableModel;

import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.xy.XYLineAndShapeRenderer;
import org.jfree.data.xy.DefaultXYDataset;
import org.jfree.util.ShapeUtilities;
import ponr.PONR;
import ponr.PressureVessel;
import ponr.ProcessSynthesisMINLP;
import ponr.TensionCompressionSpring;
import ponr.QuadraticallyConstrainedQuadraticProgram;
import ponr.DesignReinforcedConcreteBeam;
import ponr.G01_CEC2006;
import ponr.G02_CEC2006;
import ponr.G03_CEC2006;
import ponr.G04_CEC2006;
import ponr.G05_CEC2006;
import ponr.G06_CEC2006;
import ponr.G07_CEC2006;
import ponr.G08_CEC2006;
import ponr.G09_CEC2006;
import ponr.G10_CEC2006;
import ponr.G11_CEC2006;
import ponr.G12_CEC2006;
import ponr.G13_CEC2006;
import ponr.G18_CEC2006;
import ponr.G24_CEC2006;
import java.util.Date;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultListModel;

/**
 *
 * @author admin
 */
public class Inicio extends javax.swing.JFrame {

    private EvolucionDiferencial evolucionDiferencial;
    private PONR ponr;
    private Estadisticas estd;
    private ProcesoED procesoEd;
    private int iteracionesED = 1;

    private String[] cabecera;

    public Inicio() {
        initComponents();
        this.setLocationRelativeTo(null);

        this.estd = new Estadisticas();

        this.cargarPonr(this.boxProblemas.getSelectedIndex());

        this.setLocationRelativeTo(null);
        this.setExtendedState(MAXIMIZED_BOTH);
        txtGmax.setText("");
        txtMaxPop.setText("");
        txtCR.setText("");
        txtF.setText("");
        //setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("archivos\\e.png")));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        panelResultados = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbResultado = new javax.swing.JTable();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel48 = new javax.swing.JLabel();
        panelConvergencia = new javax.swing.JPanel();
        configuracion = new javax.swing.JPanel();
        panelAjuste = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        txtMaxPop = new javax.swing.JTextField();
        txtCR = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtF = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txtGmax = new javax.swing.JTextField();
        lblPob = new javax.swing.JLabel();
        lblCruz = new javax.swing.JLabel();
        lblMut = new javax.swing.JLabel();
        lblGen = new javax.swing.JLabel();
        btnIniciar = new javax.swing.JButton();
        btnDetener = new javax.swing.JButton();
        btnNuevo = new javax.swing.JButton();
        jLabel60 = new javax.swing.JLabel();
        lblIter = new javax.swing.JLabel();
        txtIter1 = new javax.swing.JTextField();
        panelEstadisticas = new javax.swing.JPanel();
        jLabel30 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        txtMejor = new javax.swing.JTextField();
        txtPeor = new javax.swing.JTextField();
        jLabel35 = new javax.swing.JLabel();
        txtMedia = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        txtMediana = new javax.swing.JTextField();
        txtSTD = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        txtTasaFac = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        txtTasaExito = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        txtCorrFac = new javax.swing.JTextField();
        jLabel40 = new javax.swing.JLabel();
        txtEval = new javax.swing.JTextField();
        jLabel41 = new javax.swing.JLabel();
        txtPorCorrFac = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtPorCorrExi1 = new javax.swing.JTextField();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel16 = new javax.swing.JPanel();
        jLabel59 = new javax.swing.JLabel();
        jLabel61 = new javax.swing.JLabel();
        jSeparator5 = new javax.swing.JSeparator();
        boxProblemas = new javax.swing.JComboBox<>();
        jPanel15 = new javax.swing.JPanel();
        jLabel64 = new javax.swing.JLabel();
        jLabel65 = new javax.swing.JLabel();
        jLabel66 = new javax.swing.JLabel();
        jLabel67 = new javax.swing.JLabel();
        jLabel68 = new javax.swing.JLabel();
        jLabel70 = new javax.swing.JLabel();
        txtD2 = new javax.swing.JTextField();
        txtFX2 = new javax.swing.JTextField();
        txtGX2 = new javax.swing.JTextField();
        txtHX2 = new javax.swing.JTextField();
        txtVariablesContinuas2 = new javax.swing.JTextField();
        txtVariablesBinarias2 = new javax.swing.JTextField();
        txtMejorConocido2 = new javax.swing.JTextField();
        lblNombreProblema = new javax.swing.JLabel();
        jLabel71 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListRango = new javax.swing.JList<>();
        jLabel72 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("DE Algorithm");
        setMaximumSize(new java.awt.Dimension(1301, 694));
        setSize(new java.awt.Dimension(1301, 694));

        jPanel1.setBackground(new java.awt.Color(245, 245, 245));

        jLabel2.setFont(new java.awt.Font("Arial", 1, 34)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(114, 173, 139));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("DE ALGORITHM");

        panelResultados.setBackground(new java.awt.Color(245, 245, 245));
        panelResultados.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Results of the configured iterations", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 14), new java.awt.Color(114, 173, 139))); // NOI18N

        tbResultado.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        tbResultado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "x1", "OF", "CVS"
            }
        ));
        tbResultado.setGridColor(new java.awt.Color(51, 153, 255));
        tbResultado.setRowHeight(25);
        jScrollPane2.setViewportView(tbResultado);

        jLabel24.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel24.setText("x1,...,xn:");

        jLabel25.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel25.setText("OF:");

        jLabel26.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel26.setText("CVS:");

        jLabel29.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel29.setText("Design variables");

        jLabel36.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel36.setText("Objective Function");

        jLabel37.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel37.setText("Constraints violation sum");

        jLabel38.setFont(new java.awt.Font("Arial", 3, 14)); // NOI18N
        jLabel38.setText("Note:");

        jLabel39.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        jLabel39.setText("If CVS = 0, then the vector of solutions is competitive.");

        jLabel48.setFont(new java.awt.Font("Arial", 3, 14)); // NOI18N
        jLabel48.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel48.setText("The table presents the best results obtained in each iteration");

        panelConvergencia.setBackground(new java.awt.Color(245, 245, 245));
        panelConvergencia.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Convergence graph", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12), new java.awt.Color(114, 173, 139))); // NOI18N

        javax.swing.GroupLayout panelConvergenciaLayout = new javax.swing.GroupLayout(panelConvergencia);
        panelConvergencia.setLayout(panelConvergenciaLayout);
        panelConvergenciaLayout.setHorizontalGroup(
            panelConvergenciaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        panelConvergenciaLayout.setVerticalGroup(
            panelConvergenciaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 203, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout panelResultadosLayout = new javax.swing.GroupLayout(panelResultados);
        panelResultados.setLayout(panelResultadosLayout);
        panelResultadosLayout.setHorizontalGroup(
            panelResultadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelResultadosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelResultadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelResultadosLayout.createSequentialGroup()
                        .addGroup(panelResultadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(panelResultadosLayout.createSequentialGroup()
                                .addComponent(jLabel24)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel29)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel26)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel37))
                            .addGroup(panelResultadosLayout.createSequentialGroup()
                                .addComponent(jLabel25)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel36)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel38)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel39))
                            .addComponent(jSeparator3))
                        .addGap(0, 184, Short.MAX_VALUE))
                    .addComponent(jLabel48, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2)
                    .addComponent(panelConvergencia, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        panelResultadosLayout.setVerticalGroup(
            panelResultadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelResultadosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelResultadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelResultadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel37, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel26))
                    .addGroup(panelResultadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel24)
                        .addComponent(jLabel29)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelResultadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(jLabel36)
                    .addComponent(jLabel38)
                    .addComponent(jLabel39))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel48)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(panelConvergencia, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        panelConvergencia.getAccessibleContext().setAccessibleName("Convergence ");
        panelConvergencia.getAccessibleContext().setAccessibleDescription("");

        configuracion.setBackground(new java.awt.Color(245, 245, 245));

        panelAjuste.setBackground(new java.awt.Color(245, 245, 245));
        panelAjuste.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "ED Parameter settings", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12), new java.awt.Color(114, 173, 139))); // NOI18N
        panelAjuste.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel10.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel10.setText("Population");
        panelAjuste.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, -1, -1));

        txtMaxPop.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtMaxPop.setToolTipText("Valores permitidos entre 10 y 500.");
        panelAjuste.add(txtMaxPop, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 60, 89, -1));

        txtCR.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtCR.setToolTipText("Valores permitidos entre 0 y 1.");
        txtCR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCRActionPerformed(evt);
            }
        });
        panelAjuste.add(txtCR, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 90, 89, -1));

        jLabel11.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel11.setText("Crossover");
        panelAjuste.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, -1, -1));

        jLabel12.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel12.setText("Mutation");
        panelAjuste.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, -1, -1));

        txtF.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtF.setToolTipText("Valores permitidos entre 0 y 1.");
        panelAjuste.add(txtF, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 120, 89, -1));

        jLabel13.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel13.setText("Evaluations");
        panelAjuste.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, -1, -1));

        txtGmax.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtGmax.setToolTipText("Valores permitidos entre 100 y 1000. ");
        panelAjuste.add(txtGmax, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 150, 89, -1));

        lblPob.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        lblPob.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPob.setText("MAX_POP");
        lblPob.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, null, java.awt.Color.blue));
        lblPob.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        lblPob.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblPobMouseClicked(evt);
            }
        });
        panelAjuste.add(lblPob, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 60, -1, -1));

        lblCruz.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        lblCruz.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCruz.setText("CR");
        lblCruz.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, null, java.awt.Color.blue));
        lblCruz.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        lblCruz.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblCruzMouseClicked(evt);
            }
        });
        panelAjuste.add(lblCruz, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 90, 35, -1));

        lblMut.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        lblMut.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblMut.setText("F");
        lblMut.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, null, java.awt.Color.blue));
        lblMut.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        lblMut.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblMutMouseClicked(evt);
            }
        });
        panelAjuste.add(lblMut, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 120, 35, -1));

        lblGen.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        lblGen.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblGen.setText("GMAX");
        lblGen.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, null, java.awt.Color.blue));
        lblGen.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        lblGen.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblGenMouseClicked(evt);
            }
        });
        panelAjuste.add(lblGen, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 150, -1, -1));

        btnIniciar.setBackground(new java.awt.Color(0, 153, 0));
        btnIniciar.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        btnIniciar.setForeground(new java.awt.Color(255, 255, 255));
        btnIniciar.setText("Start");
        btnIniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIniciarActionPerformed(evt);
            }
        });
        panelAjuste.add(btnIniciar, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 120, 185, 40));

        btnDetener.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        btnDetener.setText("Recommended configuration");
        btnDetener.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDetenerActionPerformed(evt);
            }
        });
        panelAjuste.add(btnDetener, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 30, 230, -1));

        btnNuevo.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        btnNuevo.setText("Clear values");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });
        panelAjuste.add(btnNuevo, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 80, 185, -1));

        jLabel60.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel60.setText("Iterations");
        panelAjuste.add(jLabel60, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, -1, 20));

        lblIter.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        lblIter.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblIter.setText("ITER");
        lblIter.setToolTipText("");
        lblIter.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, null, java.awt.Color.blue));
        lblIter.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        lblIter.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblIterMouseClicked(evt);
            }
        });
        panelAjuste.add(lblIter, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 30, 30, -1));

        txtIter1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtIter1.setToolTipText("");
        panelAjuste.add(txtIter1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 30, 39, -1));

        panelEstadisticas.setBackground(new java.awt.Color(245, 245, 245));
        panelEstadisticas.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Statistics", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12), new java.awt.Color(114, 173, 139))); // NOI18N
        panelEstadisticas.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel30.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        jLabel30.setText("Best f(x)");
        panelEstadisticas.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 22, 150, -1));

        jLabel33.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        jLabel33.setText("Worst f(x)");
        panelEstadisticas.add(jLabel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 68, -1, -1));

        txtMejor.setEditable(false);
        txtMejor.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        txtMejor.setText("0.0");
        txtMejor.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        txtMejor.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        panelEstadisticas.add(txtMejor, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 44, 150, -1));

        txtPeor.setEditable(false);
        txtPeor.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        txtPeor.setText("0.0");
        txtPeor.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        txtPeor.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        panelEstadisticas.add(txtPeor, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 90, 150, -1));

        jLabel35.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        jLabel35.setText("Median");
        panelEstadisticas.add(jLabel35, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 157, -1, -1));

        txtMedia.setEditable(false);
        txtMedia.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        txtMedia.setText("0.0");
        txtMedia.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        txtMedia.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        panelEstadisticas.add(txtMedia, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 134, 150, -1));

        jLabel34.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        jLabel34.setText("Mean");
        panelEstadisticas.add(jLabel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 112, -1, -1));

        txtMediana.setEditable(false);
        txtMediana.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        txtMediana.setText("0.0");
        txtMediana.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        txtMediana.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        panelEstadisticas.add(txtMediana, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 179, 150, -1));

        txtSTD.setEditable(false);
        txtSTD.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        txtSTD.setText("0.0");
        txtSTD.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        txtSTD.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        panelEstadisticas.add(txtSTD, new org.netbeans.lib.awtextra.AbsoluteConstraints(173, 44, 160, -1));

        jLabel27.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        jLabel27.setText("Standard deviation");
        panelEstadisticas.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(173, 22, -1, -1));

        jLabel28.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        jLabel28.setText("Feasible run");
        panelEstadisticas.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(173, 68, -1, -1));

        txtTasaFac.setEditable(false);
        txtTasaFac.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        txtTasaFac.setText("0.0");
        txtTasaFac.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        txtTasaFac.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        panelEstadisticas.add(txtTasaFac, new org.netbeans.lib.awtextra.AbsoluteConstraints(173, 90, 160, -1));

        jLabel31.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        jLabel31.setText("Feasible rate");
        panelEstadisticas.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(173, 112, -1, -1));

        txtTasaExito.setEditable(false);
        txtTasaExito.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        txtTasaExito.setText("0.0");
        txtTasaExito.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        txtTasaExito.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        panelEstadisticas.add(txtTasaExito, new org.netbeans.lib.awtextra.AbsoluteConstraints(173, 134, 160, -1));

        jLabel32.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        jLabel32.setText("Successful run");
        panelEstadisticas.add(jLabel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(173, 157, -1, -1));

        txtCorrFac.setEditable(false);
        txtCorrFac.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        txtCorrFac.setText("0.0");
        txtCorrFac.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        txtCorrFac.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        panelEstadisticas.add(txtCorrFac, new org.netbeans.lib.awtextra.AbsoluteConstraints(173, 179, 160, -1));

        jLabel40.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        jLabel40.setText("% of success performance");
        panelEstadisticas.add(jLabel40, new org.netbeans.lib.awtextra.AbsoluteConstraints(347, 68, -1, -1));

        txtEval.setEditable(false);
        txtEval.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        txtEval.setText("0.0");
        txtEval.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        txtEval.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        txtEval.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEvalActionPerformed(evt);
            }
        });
        panelEstadisticas.add(txtEval, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 140, 150, -1));

        jLabel41.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        jLabel41.setText("% of success rate");
        panelEstadisticas.add(jLabel41, new org.netbeans.lib.awtextra.AbsoluteConstraints(347, 22, -1, -1));

        txtPorCorrFac.setEditable(false);
        txtPorCorrFac.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        txtPorCorrFac.setText("0.0");
        txtPorCorrFac.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        txtPorCorrFac.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        panelEstadisticas.add(txtPorCorrFac, new org.netbeans.lib.awtextra.AbsoluteConstraints(347, 44, 150, -1));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        jLabel1.setText("Generations");
        panelEstadisticas.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 120, 140, -1));

        txtPorCorrExi1.setEditable(false);
        txtPorCorrExi1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        txtPorCorrExi1.setText("0.0");
        txtPorCorrExi1.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        txtPorCorrExi1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        txtPorCorrExi1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPorCorrExi1ActionPerformed(evt);
            }
        });
        panelEstadisticas.add(txtPorCorrExi1, new org.netbeans.lib.awtextra.AbsoluteConstraints(347, 90, 150, -1));

        jPanel16.setBackground(new java.awt.Color(245, 245, 245));
        jPanel16.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Selection problem", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12), new java.awt.Color(114, 173, 139))); // NOI18N
        jPanel16.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel59.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel59.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel59.setText("Initial setup");
        jPanel16.add(jLabel59, new org.netbeans.lib.awtextra.AbsoluteConstraints(-20, 20, 569, -1));

        jLabel61.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        jLabel61.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel61.setText("Optimizatión problem");
        jPanel16.add(jLabel61, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, -1, -1));
        jPanel16.add(jSeparator5, new org.netbeans.lib.awtextra.AbsoluteConstraints(89, 85, 491, 0));

        boxProblemas.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        boxProblemas.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tension-Compression Spring", "Quadratically Constrained Quadratic Program", "Pressure Vessel", "Process synthesis MINLP", "Design of a Reinforced Concrete Beam", "G01_CEC2006", "G02_CEC2006", "G03_CEC2006", "G04_CEC2006", "G05_CEC2006", "G06_CEC2006", "G07_CEC2006", "G08_CEC2006", "G09_CEC2006", "G10_CEC2006", "G11_CEC2006", "G12_CEC2006", "G13_CEC2006", "G18_CEC2006", "G24_CEC2006" }));
        boxProblemas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxProblemasActionPerformed(evt);
            }
        });
        jPanel16.add(boxProblemas, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 400, -1));

        jTabbedPane1.addTab("Initial setup", jPanel16);

        jPanel15.setBackground(new java.awt.Color(245, 245, 245));
        jPanel15.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Details", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12), new java.awt.Color(0, 0, 255))); // NOI18N
        jPanel15.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel64.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel64.setText("D-imensión");
        jPanel15.add(jLabel64, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, -1, -1));

        jLabel65.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel65.setText("Number of f(x)");
        jPanel15.add(jLabel65, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, -1, -1));

        jLabel66.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel66.setText("Number of g(x)");
        jPanel15.add(jLabel66, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, -1, -1));

        jLabel67.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel67.setText("Variable range");
        jPanel15.add(jLabel67, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 40, -1, 20));

        jLabel68.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel68.setText("Number of h(x)");
        jPanel15.add(jLabel68, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, -1, -1));

        jLabel70.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel70.setText("Best known f(x*)");
        jPanel15.add(jLabel70, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 120, -1, -1));

        txtD2.setEditable(false);
        txtD2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        txtD2.setText("0.0");
        txtD2.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        txtD2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel15.add(txtD2, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 40, 48, -1));

        txtFX2.setEditable(false);
        txtFX2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        txtFX2.setText("0.0");
        txtFX2.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        txtFX2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel15.add(txtFX2, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 60, 48, 20));

        txtGX2.setEditable(false);
        txtGX2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        txtGX2.setText("0.0");
        txtGX2.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        txtGX2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel15.add(txtGX2, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 90, 48, -1));

        txtHX2.setEditable(false);
        txtHX2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        txtHX2.setText("0.0");
        txtHX2.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        txtHX2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel15.add(txtHX2, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 120, 48, -1));

        txtVariablesContinuas2.setEditable(false);
        txtVariablesContinuas2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        txtVariablesContinuas2.setText("0.0");
        txtVariablesContinuas2.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        txtVariablesContinuas2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel15.add(txtVariablesContinuas2, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 100, 130, -1));

        txtVariablesBinarias2.setEditable(false);
        txtVariablesBinarias2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        txtVariablesBinarias2.setText("0.0");
        txtVariablesBinarias2.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        txtVariablesBinarias2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel15.add(txtVariablesBinarias2, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 70, 130, -1));

        txtMejorConocido2.setEditable(false);
        txtMejorConocido2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        txtMejorConocido2.setText("0.0");
        txtMejorConocido2.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        txtMejorConocido2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel15.add(txtMejorConocido2, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 120, 130, -1));

        lblNombreProblema.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblNombreProblema.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblNombreProblema.setText("-");
        jPanel15.add(lblNombreProblema, new org.netbeans.lib.awtextra.AbsoluteConstraints(11, 16, 484, -1));

        jLabel71.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel71.setText("Continuous variables");
        jPanel15.add(jLabel71, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 100, -1, -1));

        jListRango.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jScrollPane1.setViewportView(jListRango);

        jPanel15.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 40, 130, 20));

        jLabel72.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel72.setText("Discrete variables");
        jPanel15.add(jLabel72, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 70, -1, -1));

        jTabbedPane1.addTab("Problem characteristics", jPanel15);

        javax.swing.GroupLayout configuracionLayout = new javax.swing.GroupLayout(configuracion);
        configuracion.setLayout(configuracionLayout);
        configuracionLayout.setHorizontalGroup(
            configuracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(configuracionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(configuracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(panelAjuste, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(configuracionLayout.createSequentialGroup()
                        .addComponent(panelEstadisticas, javax.swing.GroupLayout.PREFERRED_SIZE, 520, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        configuracionLayout.setVerticalGroup(
            configuracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(configuracionLayout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelAjuste, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelEstadisticas, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        panelAjuste.getAccessibleContext().setAccessibleName("Ajuste de parámetro ED");

        jPanel2.setBackground(new java.awt.Color(245, 245, 245));

        jLabel3.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(114, 173, 139));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Constrained Numerical");

        jLabel4.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(114, 173, 139));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Optimization Problems");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(6, 6, 6))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addComponent(jLabel3)
                .addGap(1, 1, 1)
                .addComponent(jLabel4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(464, 464, 464)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(187, 187, 187)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(configuracion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(panelResultados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(3, 3, 3)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(configuracion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(panelResultados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        panelResultados.getAccessibleContext().setAccessibleDescription("");

        jMenu1.setText("File");

        jMenuItem2.setText("New");
        jMenu1.add(jMenuItem2);

        jMenuItem3.setText("Close");
        jMenu1.add(jMenuItem3);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Help");

        jMenuItem1.setText("About");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnIniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIniciarActionPerformed

        //String nombreEjecucion = this.txtNombreEjecucion.getText();
        this.evolucionDiferencial = new EvolucionDiferencial();

        long tiempoActualMillis = System.currentTimeMillis();

        // Crear un objeto Date usando el tiempo actual en milisegundos
        Date fechaHoraActual = new Date(tiempoActualMillis);

        // Formatear la fecha y hora actual en un formato legible
        SimpleDateFormat formatoFechaHora = new SimpleDateFormat("yyyy-MM-dd HH-mm-ss");
        String fechaHoraFormateada = formatoFechaHora.format(fechaHoraActual);

        String pob = this.txtMaxPop.getText();
        String cruza = this.txtCR.getText();
        String mutacion = this.txtF.getText();
        String gmaxTxt = this.txtGmax.getText();
        String iter = this.txtIter1.getText();
//        String name = "archivos\\" + String.valueOf(boxProblemas.getSelectedItem())+txtNo.getText() + ".xlsx";
//        String conv = "archivos\\conv-" + String.valueOf(boxProblemas.getSelectedItem())+txtNo.getText() + ".xlsx";
        String name = "archivos\\" + String.valueOf(boxProblemas.getSelectedItem()) + "_" + fechaHoraFormateada + ".xlsx";
        String conv = "archivos\\convergence- " + String.valueOf(boxProblemas.getSelectedItem()) + "_" + fechaHoraFormateada + ".xlsx";

        //estructura condicional
        if ((this.validarCampo(pob) && this.validarCampo(cruza)
                && this.validarCampo(mutacion) && this.validarCampo(iter))) {

            //Si los datos ingresados son correctos, entonces hacemos la conversión.
            int maxPop = Integer.parseInt(pob);
            double cr = Double.parseDouble(cruza);
            double f = Double.parseDouble(mutacion);
            int gmax = Integer.parseInt(gmaxTxt);

            int Iter = Integer.parseInt(iter);

            //Se realiza la validación de rangos permitidos.
            if ((maxPop >= 1 && maxPop <= 100) && (f > 0 && f < 1)
                    && (cr > 0 && cr < 1) && (Iter > 0 && Iter <= 30)) {

                //Establecemos la configuración de parámetros
                this.evolucionDiferencial.setPoblacion(maxPop);
                this.evolucionDiferencial.setF(f);
                this.evolucionDiferencial.setCR(cr);
                this.evolucionDiferencial.setGmax(gmax);
                this.iteracionesED = Iter;

                //Iniciamos el algoritmo
                this.evolucionDiferencial.iniciar(ponr, this.iteracionesED, name, conv);

                //Finalizado el algoritmo, mostramos los resultados
                this.mostrarTabla();
                this.mostrarEstadisticas();
                this.mostrarGrafica();
                //this.evolucionDiferencial.createExcel("archivos\\experimento.xlsx" );
//                int g = (this.evolucionDiferencial.getGmax() / this.evolucionDiferencial.getPoblacion()) - 1;
                this.txtEval.setText("" + this.evolucionDiferencial.getGmax());
            } else {
                JOptionPane.showMessageDialog(null, "Check the limits on the corresponding labels. ");
            }

        } else {
            JOptionPane.showMessageDialog(null, "Verify that the values entered are numeric type.");
        }

    }//GEN-LAST:event_btnIniciarActionPerformed


    private void lblPobMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblPobMouseClicked
        JOptionPane.showMessageDialog(null, "Values allowed between 10 and 100.");
    }//GEN-LAST:event_lblPobMouseClicked

    private void lblCruzMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCruzMouseClicked
        JOptionPane.showMessageDialog(null, "Values allowed between 0 and 1.");
    }//GEN-LAST:event_lblCruzMouseClicked

    private void lblMutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblMutMouseClicked
        JOptionPane.showMessageDialog(null, "Values allowed between 0 and 1.");
    }//GEN-LAST:event_lblMutMouseClicked

    private void lblGenMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblGenMouseClicked
        JOptionPane.showMessageDialog(null, " ");
    }//GEN-LAST:event_lblGenMouseClicked

    private void btnDetenerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDetenerActionPerformed

        configuracionRecomenda();

    }//GEN-LAST:event_btnDetenerActionPerformed

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
   pruebas pru = new pruebas();
// pru.functionPresion();
// pru.functionQuadratically();
// pru.funcionrestricTension();
// pru.funcionrestricMINLP();
//pru.functionConcrete();
        pru.funcionG24();
//        configuracionRecomenda();
        tbResultado.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null},
                    {null, null, null}
                },
                new String[]{
                    "x1", "FO", "SVR"
                }
        ));
        txtGmax.setText("");
        txtMaxPop.setText("");
        txtCR.setText("");
        txtF.setText("");
        txtMejor.setText(" ");
        txtPeor.setText(" ");
        txtMedia.setText(" ");
        txtMediana.setText(" ");
        txtSTD.setText(" ");
        txtTasaFac.setText(" ");
        txtTasaExito.setText(" ");
        txtCorrFac.setText(" ");
        txtPorCorrFac.setText(" ");
        txtEval.setText(" ");
        txtPorCorrExi1.setText(" ");

        //txtRenExit.setText(" ");
        this.panelConvergencia.removeAll();
        this.repaint();
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void txtCRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCRActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCRActionPerformed

    private void boxProblemasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxProblemasActionPerformed

        //Cargamos el problema seleccionado
        int problemaSeleccionado = this.boxProblemas.getSelectedIndex();
        this.cargarPonr(problemaSeleccionado);
    }//GEN-LAST:event_boxProblemasActionPerformed

    private void lblIterMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblIterMouseClicked
        JOptionPane.showMessageDialog(null, "Values allowed between 1 and 30.");
    }//GEN-LAST:event_lblIterMouseClicked

    private void txtEvalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEvalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEvalActionPerformed

    private void txtPorCorrExi1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPorCorrExi1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPorCorrExi1ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
//        try {
//            
//            //GTK+  CDE/Motif
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Substance".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
        //</editor-fold>

        try {
            // set your theme
            AeroLookAndFeel.setTheme("Green-Giant-Font");

//        System.out.println( AeroLookAndFeel      .getThemes());
            // select the Look and Feel
            UIManager.setLookAndFeel(new AeroLookAndFeel());
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            ex.printStackTrace();
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Inicio().setVisible(true);

            }

        });

    }

    private void mostrarTabla() {

        int nColum = this.ponr.getOrdenVariables().length;
        this.cabecera = new String[nColum + 2];

        for (int i = 0; i < nColum; i++) {
            this.cabecera[i] = this.ponr.getOrdenVariables()[i];
        }

        this.cabecera[nColum] = "OF";
        this.cabecera[nColum + 1] = "CVS";

        int filas = evolucionDiferencial.getMejoresValores().length;
        int columnas = evolucionDiferencial.getMejoresValores()[0].length;
        Object[][] objectAux = new Object[filas][columnas];

        for (int i = 0; i < filas; i++) {
            for (int j = 0; j < columnas; j++) {
                objectAux[i][j] = evolucionDiferencial.getMejoresValores()[i][j];
            }
        }

        this.tbResultado.setModel(
                new DefaultTableModel(objectAux, cabecera)
        );

    }

    private void mostrarEstadisticas() {
//        int nColum = this.ponr.getOrdenVariables().length;
//        int indiceSVR=nColum + 1;
        int indiceFO = this.ponr.getNumVariables();
//        System.out.println(indiceSVR);
        this.txtMejor.setText("" + this.estd.best(this.evolucionDiferencial.getMejoresValores(), indiceFO)); //mandar svr
        this.txtPeor.setText("" + this.estd.worst(this.evolucionDiferencial.getMejoresValores(), indiceFO));
        this.txtMedia.setText("" + this.estd.mean(this.evolucionDiferencial.getMejoresValores(), indiceFO));
        this.txtMediana.setText("" + this.estd.median(this.evolucionDiferencial.getMejoresValores(), indiceFO));
        this.txtSTD.setText("" + this.estd.standardDeviation(this.evolucionDiferencial.getMejoresValores(), indiceFO));
        this.txtTasaFac.setText("" + this.estd.feasibleRate(this.evolucionDiferencial.getMejoresValores(), indiceFO));
        this.txtTasaExito.setText("" + this.estd.successRate(this.evolucionDiferencial.getMejoresValores(), indiceFO, this.ponr.getMejorConocido()));
        ////        for(int i=0; i<this.evolucionDiferencial.getMejoresValores().length; i++){
        ////            for (int j=0; j<indiceFO+2; j++){
        ////                System.out.println(" "+ this.evolucionDiferencial.getMejoresValores()[i][j]);
        ////            }
        ////            System.out.println(" ");
        ////        }

        this.txtCorrFac.setText("" + this.estd.CorridasFact(this.evolucionDiferencial.getMejoresValores()));
        this.txtPorCorrFac.setText("" + this.estd.porCorrFact(this.evolucionDiferencial.getMejoresValores()));
        this.txtPorCorrExi1.setText("" + this.estd.porcCorrExt(this.evolucionDiferencial.getMejoresValores(), this.ponr.getMejorConocido()));
//        this.txtEval.setText("" + g);

    }

    private void cargarPonr(int problema) {

        switch (problema) {
            case 0:
                this.ponr = new TensionCompressionSpring();

                break;
            case 1:
                this.ponr = new QuadraticallyConstrainedQuadraticProgram();

                break;
            case 2:
                this.ponr = new PressureVessel();
                break;
            case 3:
                this.ponr = new ProcessSynthesisMINLP();
                break;
            case 4:
                this.ponr = new DesignReinforcedConcreteBeam();
                break;
            case 5:
                this.ponr = new G01_CEC2006();
                break;
            case 6:
                this.ponr = new G02_CEC2006();
                break;
            case 7:
                this.ponr = new G03_CEC2006();
                break;
            case 8:
                this.ponr = new G04_CEC2006();
                break;
            case 9:
                this.ponr = new G05_CEC2006();
                break;
            case 10:
                this.ponr = new G06_CEC2006();
                break;
            case 11:
                this.ponr = new G07_CEC2006();
                break;
            case 12:
                this.ponr = new G08_CEC2006();
                break;
            case 13:
                this.ponr = new G09_CEC2006();
                break;
            case 14:
                this.ponr = new G10_CEC2006();
                break;
            case 15:
                this.ponr = new G11_CEC2006();
                break;
            case 16:
                this.ponr = new G12_CEC2006();
                break;
            case 17:
                this.ponr = new G13_CEC2006();
                break;
            case 18:
                this.ponr = new G18_CEC2006();
                break;
            case 19:
                this.ponr = new G24_CEC2006();
                break;
        } //cierra switch

        DefaultListModel<String> objectAux = new DefaultListModel<>();

        for (int i = 0; i < this.ponr.getNumVariables(); i++) {
            objectAux.addElement(this.ponr.getOrdenVariables()[i] + " = [" + Double.toString(this.ponr.getRangos()[i][0]) + " , " + Double.toString(this.ponr.getRangos()[i][1]) + "]");
        }

        this.jListRango.setModel(objectAux);
        this.lblNombreProblema.setText(this.ponr.getNombre());
        this.txtD2.setText("" + this.ponr.getNumVariables());
        this.txtFX2.setText("1");
        this.txtGX2.setText("" + this.ponr.getResDesigualdad().length);
        this.txtHX2.setText("0");
        int contador = 0;
        for (int i = 0; i < this.ponr.isVariableDiscreta().length; i++) {
            if (!this.ponr.isVariableDiscreta()[i]) {
                contador++;
            }
        }
        this.txtVariablesContinuas2.setText("" + contador);
        this.txtVariablesBinarias2.setText("" + (this.ponr.getNumVariables() - contador));
        this.txtMejorConocido2.setText(this.ponr.getMejorConocido() + "");

    }

    private void mostrarGrafica() {
        DefaultXYDataset dataset;
        JFreeChart chart;
        XYPlot plot;
        XYLineAndShapeRenderer renderer;
        ChartPanel chartPane1;

        dataset = new DefaultXYDataset();
        dataset.addSeries("Best Values ", this.evolucionDiferencial.getConvergencia());

        chart = null;
        chart = ChartFactory.createXYLineChart(
                "Convergence graph" /*+ ((this.iteracionesED > 1) ? (int) this.iteracionesED / 2 : 1)*/ //this.problem.getNameProblem()
                //"JMetaBFOP convergence for G09"
                ,
                 "Generations",
                "Objective Function",
                dataset,
                PlotOrientation.VERTICAL, false, true, false);

        ((NumberAxis) chart.getXYPlot().getRangeAxis()).setNumberFormatOverride(new DecimalFormat("#.###############"));

        plot = (XYPlot) chart.getPlot();
        renderer = (XYLineAndShapeRenderer) plot.getRenderer();
        renderer.setSeriesShapesVisible(0, true);
        renderer.setSeriesPaint(0, Color.RED);

        renderer.setSeriesShape(0, ShapeUtilities.createDiamond(1));
        //renderer.setSeriesShape(0, new Ellipse2D.Double(6/2-3, 6/2-3, 2*3, 2*3));

        renderer.setSeriesStroke(0, new BasicStroke(2));
        chart.getXYPlot().setRenderer(renderer);
        plot.setDomainGridlinePaint(Color.GRAY);
        plot.setRangeGridlinePaint(Color.GRAY);
        chartPane1 = new ChartPanel(chart);
        chart.getPlot().setBackgroundPaint(new Color(245, 245, 245));

        graph(panelConvergencia, chartPane1);
    }

    private void graph(JPanel panel, ChartPanel chartPane) {
        panel.add(chartPane);
        chartPane.setBounds(0, 0, panel.getWidth(), panel.getHeight());
    }

    /**
     * Método para validar que una cadena de texto sea numerico
     *
     * @param cadena
     * @return
     */
    private boolean esNumero(String cadena) {
        try {
            Double.parseDouble(cadena);
            return true;
        } catch (NumberFormatException e) {
            return false;
        }

    }

    /**
     * Método que valida si el texto ingresado por el usuario es numerico y no
     * es vacio.
     *
     * @param campo
     * @return
     */
    private boolean validarCampo(String campo) {
        return (this.esNumero(campo) && (!campo.isEmpty()));
    }

    private void configuracionRecomenda() {

        this.txtMaxPop.setText("100");//50
        this.txtCR.setText("0.9");//0.7
        this.txtF.setText("0.5");//0.8
        this.txtGmax.setText("30000");//25099

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> boxProblemas;
    private javax.swing.JButton btnDetener;
    private javax.swing.JButton btnIniciar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JPanel configuracion;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel70;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel72;
    private javax.swing.JList<String> jListRango;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblCruz;
    private javax.swing.JLabel lblGen;
    private javax.swing.JLabel lblIter;
    private javax.swing.JLabel lblMut;
    private javax.swing.JLabel lblNombreProblema;
    private javax.swing.JLabel lblPob;
    private javax.swing.JPanel panelAjuste;
    private javax.swing.JPanel panelConvergencia;
    private javax.swing.JPanel panelEstadisticas;
    private javax.swing.JPanel panelResultados;
    private javax.swing.JTable tbResultado;
    private javax.swing.JTextField txtCR;
    private javax.swing.JTextField txtCorrFac;
    private javax.swing.JTextField txtD2;
    private javax.swing.JTextField txtEval;
    private javax.swing.JTextField txtF;
    private javax.swing.JTextField txtFX2;
    private javax.swing.JTextField txtGX2;
    private javax.swing.JTextField txtGmax;
    private javax.swing.JTextField txtHX2;
    private javax.swing.JTextField txtIter1;
    private javax.swing.JTextField txtMaxPop;
    private javax.swing.JTextField txtMedia;
    private javax.swing.JTextField txtMediana;
    private javax.swing.JTextField txtMejor;
    private javax.swing.JTextField txtMejorConocido2;
    private javax.swing.JTextField txtPeor;
    private javax.swing.JTextField txtPorCorrExi1;
    private javax.swing.JTextField txtPorCorrFac;
    private javax.swing.JTextField txtSTD;
    private javax.swing.JTextField txtTasaExito;
    private javax.swing.JTextField txtTasaFac;
    private javax.swing.JTextField txtVariablesBinarias2;
    private javax.swing.JTextField txtVariablesContinuas2;
    // End of variables declaration//GEN-END:variables

}
